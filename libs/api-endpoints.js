const { API_URL: url } = require('./urls');

module.exports = {
    API_AUTHENTICATE                   : ()                                  => `${url}/api/authenticate`,
    API_LOGIN                          : ()                                  => `${url}/api/login`,
    API_LOGOUT                         : ()                                  => `${url}/api/logout`,
    API_CREATE_ACCOUNT                 : ()                                  => `${url}/api/user`,
    API_CREATE_PROJECT                 : ()                                  => `${url}/api/projects`,
    API_SINGLE_PROJECT                 : ({ id })                            => `${url}/api/projects/${id}`,
    API_SINGLE_TOKEN                   : ({ tokenId, projectId })            => `${url}/api/projects/${projectId}/tokens/${tokenId}`,
    API_PROJECTS                       : ()                                  => `${url}/api/projects`,
    API_USER                           : ()                                  => `${url}/api/user`,
    API_CREATE_TOKEN                   : ({ projectId })                     => `${url}/api/projects/${projectId}/tokens`,
    API_EDIT_TOKEN                     : ({ projectId, tokenName })          => `${url}/api/projects/${projectId}/tokens/${tokenName}`,
    API_EDIT_PROJECT                   : ({ projectId, property })           => `${url}/api/projects/${projectId}/${property}`,
    API_EDIT_USERS_PERMISSION          : ({ projectId, userId })             => `${url}/api/projects/${projectId}/members/${userId}/permissions`,
    API_ADD_USER                       : ({ projectId })                     => `${url}/api/projects/${projectId}/members`,
    API_REMOVE_USER                    : ({ projectId, userId })             => `${url}/api/projects/${projectId}/members/${userId}`,
    API_PUBLISH                        : ({ projectId })                     => `${url}/api/projects/${projectId}/tokens/publish`,
    API_GET_NEW_API_TOKEN              : ({ projectId })                     => `${url}/api/user/access-tokens/${projectId}`,
    API_SET_EXPORT_PRIVACY             : ({ projectId, platform })           => `${url}/api/projects/${projectId}/privacy/${platform}`,
    API_GET_EXPORT_FORMATS             : ()                                  => `${url}/api/formats`,
    API_DOWNLOAD_ZIP                   : ({ projectId, format, version })    => `${url}/api/projects/${projectId}/tokens/${version}/export/${format}`,
    API_DELETE_TOKEN                   : ({ projectId, tokenName })          => `${url}/api/projects/${projectId}/tokens/${tokenName}`,
    API_STYLE_STRINGS                  : ({ projectId, version, formats })   => `${url}/api/projects/${projectId}/tokens/${version}/export/${formats.length === 0 ? 'css' : formats.join('&')}/raw`,
    API_PUBLIC_PROJECT                 : ({ projectId })                     => `${url}/api/public/projects/${projectId}`,
    API_PUBLIC_TOKEN                   : ({ projectId, tokenId })            => `${url}/api/public/projects/${projectId}/tokens/${tokenId}`,
    API_ADD_PLATFORM_ALTERATION        : ({ projectId, tokenId, format })    => `${url}/api/projects/${projectId}/tokens/${tokenId}/alterations/${format}`,
    API_REMOVE_PLATFORM_ALTERATION     : ({ projectId, tokenId, format })    => `${url}/api/projects/${projectId}/tokens/${tokenId}/alterations/${format}`,
    API_UPDATE_SELF                    : ()                                  => `${url}/api/user/edit`,
    API_GET_OWNED_PROJECTS             : ()                                  => `${url}/api/projects/owned`,
    API_RESTORE_VERSION                : ({ projectId, version })            => `${url}/api/projects/${projectId}/tokens/restore/${version}`,
    API_ADD_THEME_VARIATION            : ({ projectId, tokenId, themeId })   => `${url}/api/projects/${projectId}/tokens/${tokenId}/themes/${themeId}`,
    API_ADD_THEME                      : ({ projectId })                     => `${url}/api/projects/${projectId}/themes`,
    API_EDIT_THEME                     : ({ projectId, themeId })            => `${url}/api/projects/${projectId}/themes/${themeId}`,
    API_DELETE_THEME                   : ({ projectId, themeId })            => `${url}/api/projects/${projectId}/themes/${themeId}`
}
